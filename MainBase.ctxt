#BlueJ class context
comment0.params=sideIn
comment0.target=MainBase(boolean)
comment0.text=\r\n\ Creates\ a\ Main\ Base\ that\ has\ the\ default\ hitPoints\ and\ where\ the\r\n\ side\ needs\ to\ be\ specified\ as\ well\ as\ all\ other\ facilities\ so\ that\ they\ \r\n\ are\ one\ the\ same\ side\ of\ the\ main\ base\r\n\ \r\n\ not\ really\ used,\ really\ only\ here\ to\ test\ simulation\ in\ the\ process\ of\ creating\ it\r\n\ \r\n\ @param\ sideIn\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ side\ the\ main\ base\ is\ on,\ true\ for\ one\ side,\ false\ for\ the\ other\r\n
comment1.params=sideIn\ hitPointsIn\ startBareFootAmount\ coolDownTime\ startResearchPoint\ startStoragePoint
comment1.target=MainBase(boolean,\ int,\ int,\ int,\ int,\ int)
comment1.text=\r\n\ Creates\ a\ Main\ Base\ that\ requires\ a\ specified\ initial\ \r\n\ hitPoint\ and\ side,\ as\ well\ as\ all\ other\ faicilities\ so\ that\ they\ are\ on\ the\ same\r\n\ side\ as\ the\ main\ base\ and\ also\ have\ specified\ values\ for\ each\ of\ their\ own\ \r\n\ unique\ properties\ \r\n\r\n\ @param\ sideIn\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ side\ the\ main\ base\ is\ on,\ true\ for\ one\ side,\ false\ for\ the\ other\r\n\ @param\ hitPointsIn\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ initial\ hitPoints\ the\ main\ base\ will\ start\ off\ with\ \ \r\n\ @param\ startBareFootAmount\ \ \ \ \ \ \ initial\ amount\ fo\ bareFoot\ soldiers\ spawn\r\n\ @param\ coolDownTime\ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ cool\ down\ time\ between\ each\ spawning\ of\ units\r\n\ @param\ startResearchPoint\ \ \ \ \ \ \ \ the\ initial\ research\ points\ for\ research\ facility\r\n\ @param\ startStoragePoint\ \ \ \ \ \ \ \ \ the\ initial\ storage\ points\ for\ storage\ facility\r\n
comment10.params=
comment10.target=void\ checkElephantOnScreen()
comment10.text=\r\n\ Counting\ number\ of\ elephants\ on\ screen\ on\ the\ base's\ side.\r\n
comment11.params=
comment11.target=void\ checkTombstoneOnScreen()
comment11.text=\r\n\ Counting\ number\ of\ tombstones\ on\ screen\ on\ the\ base's\ side.\r\n
comment12.params=
comment12.target=void\ checkMedicOnScreen()
comment12.text=\r\n\ Counting\ number\ of\ medics\ on\ screen\ on\ the\ base's\ side.\r\n
comment13.params=
comment13.target=void\ spawnBareFootRandom()
comment13.text=\r\n\ Spawns\ a\ bare\ foot\ soldier\ at\ a\ varied\ x\ coordinate\ beside\ the\ base,\ decreasing\ the\ supplies\ it\ required.\r\n
comment14.params=
comment14.target=void\ spawnBareFoot()
comment14.text=\r\n\ Spawns\ a\ bare\ foot\ soldier\ beside\ the\ base,\ decreasing\ the\ supplies\ it\ required.\r\n
comment15.params=
comment15.target=void\ spawnHorse()
comment15.text=\r\n\ Spawns\ a\ horse\ soldier\ on\ either\ the\ top\ or\ bottom\ of\ the\ screen\r\n\ depending\ on\ whether\ another\ horse\ is\ already\ there\ or\ not,\ decreasing\ the\ supplies\ it\ required.\r\n
comment16.params=
comment16.target=void\ spawnElephant()
comment16.text=\r\n\ Spawns\ an\ elephant\ beside\ the\ base,\ decreasing\ the\ supplies\ it\ required.\r\n
comment17.params=hitPoints
comment17.target=void\ setHitPoints(int)
comment17.text=\r\n\ Modifies\ hitPoints\ amount\ to\ a\ new\ amount\ \r\n\ \r\n\ @param\ hitPoints\ \ the\ new\ hitPoints\ amount\ that\ the\ Main\ base\ will\ now\ have\r\n
comment18.params=deaths
comment18.target=void\ setDeaths(int)
comment18.text=\r\n\ Modifies\ deaths\ amount\ to\ a\ new\ amount\ \r\n\ \r\n\ @param\ deaths\ \ the\ new\ deaths\ amount\ that\ the\ Main\ base\ will\ now\ record\r\n
comment19.params=damage
comment19.target=void\ setDamageBareFoot(int)
comment19.text=\r\n\ Modifies\ damageBareFoot\ amount\ to\ a\ new\ amount\ \r\n\ \r\n\ @param\ damage\ \ the\ new\ damageBareFoot\ amount\ that\ the\ Main\ base\ will\ now\ record\r\n
comment2.params=
comment2.target=void\ act()
comment2.text=\r\n\ Act\ -\ do\ whatever\ the\ MainBase\ wants\ to\ do.\ This\ method\ is\ called\ whenever\r\n\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\r\n
comment20.params=damage
comment20.target=void\ setDamageHorse(int)
comment20.text=\r\n\ Modifies\ damageHorse\ amount\ to\ a\ new\ amount\ \r\n\ \r\n\ @param\ damage\ \ the\ new\ damageHorse\ amount\ that\ the\ Main\ base\ will\ now\ record\r\n
comment21.params=damage
comment21.target=void\ setDamageElephant(int)
comment21.text=\r\n\ Modifies\ damageElephant\ amount\ to\ a\ new\ amount\ \r\n\ \r\n\ @param\ damage\ \ the\ new\ damageElephant\ amount\ that\ the\ Main\ base\ will\ now\ record\r\n
comment22.params=
comment22.target=int\ getHitPoints()
comment22.text=\r\n\ Returns\ current\ hitPoints\ amount\ \r\n\r\n\ @return\ int\ \ the\ current\ hit\ point\ of\ the\ main\ base\r\n
comment23.params=
comment23.target=int\ getDeaths()
comment23.text=\r\n\ Returns\ current\ deaths\ amount\ \r\n\r\n\ @return\ int\ \ the\ current\ deaths\ amount\r\n
comment24.params=
comment24.target=int\ getCoolDownTime()
comment24.text=\r\n\ Returns\ swan\ rate\ amount\ \r\n\r\n\ @return\ int\ \ the\ spawn\ rate\ amount\r\n
comment25.params=
comment25.target=int\ getDamageBareFoot()
comment25.text=\r\n\ Returns\ current\ damageBareFoot\ amount\ \r\n\r\n\ @return\ int\ \ the\ current\ damageBareFoot\ amount\r\n
comment26.params=
comment26.target=int\ getDamageHorse()
comment26.text=\r\n\ Returns\ current\ damageHorse\ amount\ \r\n\r\n\ @return\ int\ \ the\ current\ damageHorse\ amount\r\n
comment27.params=
comment27.target=int\ getDamageElephant()
comment27.text=\r\n\ Returns\ current\ damageElephant\ amount\ \r\n\r\n\ @return\ int\ \ the\ current\ damageElephant\ amount\r\n
comment28.params=
comment28.target=int\ getBareFootOnScreen()
comment28.text=\r\n\ Returns\ current\ number\ of\ barefoots\ from\ the\ mainbase's\ side\ is\ on\ the\ screen\r\n\r\n\ @return\ int\ \ the\ current\ \ \ \ \ number\ of\ barefoots\ from\ the\ mainbase's\ side\ on\ the\ screen\r\n
comment3.params=
comment3.target=void\ initialTasks()
comment3.text=\r\n\ Carries\ out\ the\ tasks\ at\ the\ beginning\ of\ the\ game\ such\ as\ adding\ other\ buildings,\r\n\ and\ spawning\ the\ correct\ amount\ fo\ starting\ bare\ foots.\r\n
comment4.params=
comment4.target=void\ spawnShip()
comment4.text=\r\n\ Spawns\ the\ ship\ when\ called\ to\ drop\ the\ supply\ crates,\ checks\ to\ see\ if\ there\r\n\ ther\ are\ any\ other\ ships\ on\ the\ screen\ and\ if\ storage\ points\ of\ either\ base\ is\ low\ enough\ to\ \r\n\ need\ a\ ship\ to\ spawn.\ If\ both\ criteria\ are\ met\ then\ a\ ship\ is\ spawn.\ \r\n
comment5.params=
comment5.target=void\ spawn()
comment5.text=\r\n\ Spawns\ the\ respective\ units;\ bareFoot,\ horses,\ and\ elephants\ according\ to\ research\ level,\ damage\ done\ by\ each,\ storage\ points,\ and\ \r\n\ types\ of\ troops\ already\ on\ the\ field.\ \r\n
comment6.params=
comment6.target=void\ checkNewLevel()
comment6.text=\r\n\ Spawns\ a\ new\ set\ of\ troops\ not\ needing\ any\ storage\ points\ at\ the\ beggining\ of\ each\ new\ \r\n\ research\ level,\ primarily\ level\ 2\ and\ level\ 3.\r\n
comment7.params=
comment7.target=void\ updateResearch()
comment7.text=\r\n\ Updating\ research\ points\ based\ on\ the\ amounts\ of\ deaths\ recorded\ in\ other\ base.\r\n
comment8.params=
comment8.target=void\ checkOnScreenBareFoot()
comment8.text=\r\n\ Counting\ number\ of\ bare\ foot\ soldiers\ on\ screen\ on\ the\ base's\ side.\r\n
comment9.params=
comment9.target=void\ checkHorseOnScreen()
comment9.text=\r\n\ Counting\ number\ of\ horses\ on\ screen\ on\ the\ base's\ side.\r\n
numComments=29
