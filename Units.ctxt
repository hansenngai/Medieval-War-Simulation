#BlueJ class context
comment0.params=
comment0.target=boolean\ getSide()
comment0.text=\r\n\ Gets\ the\ side\ of\ which\ the\ actor\ is\ from\r\n\ @return\ true\ -\ left\ side,\ false\ -\ right\ side\r\n
comment1.params=
comment1.target=void\ loseALife()
comment1.text=\r\n\ Makes\ the\ target\ lose\ a\ life.\ Gets\ called\ by\ the\ arrow\ class\r\n
comment10.params=
comment10.target=boolean\ aim()
comment10.text=\r\n\ Aims\ at\ the\ defined\ barefoot\ target.\ Gets\ called\ by\ the\ barefoot\ and\ horse\ classes\ when\ aiming\ at\ barefoot\ targets.\r\n\ @return\ true\ -\ a\ target\ exsist\ and\ is\ aimed\ at,\ false-\ no\ target\ exsist\ to\ be\ aimed\ at\r\n
comment11.params=revive
comment11.target=void\ checkLives(boolean)
comment11.text=\r\n\ Updates\ the\ health\ icons\ being\ displayed\ for\ each\ unit.\r\n\ If\ the\ lives\ reach\ 0,\ then\ there\ is\ an\ option\ to\ be\ able\ to\ be\ revived\ or\ not.\r\n\ @param\ revive\ -\ true-\ the\ unit\ could\ be\ revived,\ false-\ the\ unit\ will\ not\ be\ able\ to\ be\ revived\r\n
comment12.params=
comment12.target=void\ revive()
comment12.text=\r\n\ Revives\ the\ soldier\ riding\ the\ vehicles\ or\ if\ a\ barefoot\ dies,\ he\ turns\ to\ a\ tombstone\ waiting\ for\ the\ medics\r\n\ to\ revive\ him.\ Gets\ called\ by\ the\ checkLives\ method\r\n
comment2.params=
comment2.target=int\ getLives()
comment2.text=\r\n\ Gets\ the\ lives\ of\ this\ unit.\r\n\ @return\ -\ the\ amount\ of\ lives\ of\ this\ unit\r\n
comment3.params=revive
comment3.target=void\ instanceDeath(boolean)
comment3.text=\r\n\ Kills\ the\ target\ and\ removes\ all\ its\ health\ icons\ along\ with\ the\ body\ from\ the\ screen.\r\n\ There\ is\ an\ option\ of\ whether\ the\ target\ can\ get\ revived\ or\ not\r\n\ @param\ revive-\ true-\ could\ be\ revived,\ false-\ could\ not\ be\ revived\r\n
comment4.params=
comment4.target=boolean\ checkSpawnMovement()
comment4.text=\r\n\ Checks\ if\ the\ soldier\ is\ still\ making\ his\ way\ to\ the\ battlefield\r\n\ @return\ true-\ he\ is,\ false-\ he\ is\ not\r\n
comment5.params=
comment5.target=boolean\ checkTree()
comment5.text=\r\n\ Checks\ if\ the\ soldier's\ arrow\ will\ hit\ a\ tree/soldier\ from\ the\ same\ side\ first\ before\ hitting\ his\ target.\r\n\ @return\ true-\ the\ first\ thing\ it\ hit\ will\ be\ the\ target,\ false-\ it\ will\ hit\ a\ tree\ or\ a\ soldier\ from\ the\ same\ side\ first\r\n
comment6.params=
comment6.target=boolean\ checkObstacle()
comment6.text=\r\n\ Checks\ if\ the\ soldier\ hits\ an\ obstacle\ (tree)\ or\ not.\r\n\ @return\ true\ -\ there\ is\ an\ obstacle,\ false\ -\ there\ isn't\ an\ obstacle\r\n
comment7.params=actor
comment7.target=double\ calculateNearestActor(greenfoot.Actor)
comment7.text=\r\n\ Calculates\ the\ distance\ between\ the\ specified\ actor\ and\ this\ unit.\r\n\ Gets\ called\ by\ every\ class\ for\ numerous\ reasons.\r\n\ @param\ actor-\ the\ unit\ in\ which\ the\ distance\ between\ it\ and\ this\ unit\ will\ be\ measured\r\n
comment8.params=lives
comment8.target=void\ setLives(int)
comment8.text=\r\n\ Sets\ the\ live\ of\ the\ specified\ actor.\ Gets\ called\ by\ the\ elephant\ class.\r\n\ @param\ lives\ -\ the\ amount\ of\ lives\ wished\ to\ be\ set\r\n
comment9.params=side
comment9.target=boolean\ checkCloseSoldiers(boolean)
comment9.text=\r\n\ Checks\ to\ see\ if\ there\ any\ soldier\ of\ the\ specified\ type\ in\ a\ range\r\n\ of\ 200\ pixels\ around\ the\ unit.\ Defines\ the\ barefoot\ variable\ and\ gives\ it\ \r\n\ the\ value\ of\ the\ closest\ soldier\ to\ be\ later\ used\ in\ the\ shoot\ method.\r\n\ @return\ true\ -\ there\ is\ a\ soldier,\ false\ -\ there\ isn't\ a\ soldier\r\n\ @param\ side-\ the\ side\ of\ the\ soldier\ you\ are\ looking\ for\ true-left\ side,\ false\ -right\ side\r\n
numComments=13
