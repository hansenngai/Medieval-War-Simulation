#BlueJ class context
comment0.params=side\ myBase
comment0.target=Horse(boolean,\ MainBase)
comment0.text=\r\n\ Constructs\ the\ horse.\ Defines\ the\ side\ and\ base\ the\ horse\ comes\ from\ and\ amount\ of\ life\ the\ horse\ will\ have.\r\n\ Sets\ the\ speed\ of\ the\ horse\ and\ displays\ its\ health\ icons.\r\n\ @param\ side-\ which\ base\ the\ horse\ will\ come\ from\ true\ -\ right\ side,\ false-\ left\ side\r\n\ @param\ myBase\ -\ which\ base\ the\ horse\ comes\ from\r\n
comment1.params=
comment1.target=void\ act()
comment1.text=\r\n\ Act\ -\ do\ whatever\ the\ Horse\ wants\ to\ do.\ This\ method\ is\ called\ whenever\r\n\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\r\n\ Controls\ how\ the\ horse\ will\ react\ in\ different\ situations\r\n
comment10.params=
comment10.target=boolean\ rider()
comment10.text=\r\n\ Returns\ whether\ there\ is\ an\ empty\ spot\ on\ the\ horse\ or\ not\r\n\ @return\ true\ -\ there\ is\ an\ empty\ spot,\ false\ -\ there\ isn't\ an\ empty\ spot\r\n
comment11.params=
comment11.target=int\ numberOfRiders()
comment11.text=\r\n\ Returns\ the\ number\ of\ riders\ on\ the\ horse\r\n\ @return\ the\ number\ of\ riders\ on\ the\ horse\r\n
comment2.params=actor
comment2.target=boolean\ goToHorse(greenfoot.Actor)
comment2.text=\r\n\ Checks\ to\ see\ if\ the\ specified\ actor\ should\ seek\ the\ horse\ or\ not.\r\n\ @return\ true\ -\ the\ soldier\ should\ seek\ the\ horse\ false-\ he\ shouldn't\r\n\ @param\ actor-\ the\ specific\ actor\ that\ should\ or\ should\ not\ seek\ the\ horse\r\n
comment3.params=
comment3.target=void\ ride()
comment3.text=\r\n\ Soldier\ jumps\ on\ the\ horse\ if\ comes\ close\ to\ it.\r\n\ Soldier\ no\ longer\ on\ the\ screen\ and\ the\ image\ of\ the\ horse\ \r\n\ changes\ to\ the\ soldier\ riding\ it.\r\n
comment4.params=
comment4.target=void\ chooseSoldiers()
comment4.text=\r\n\ Chooses\ the\ closest\ soldier\ to\ the\ horse\ and\ defines\ him\ in\ the\ target\ variable.\r\n
comment5.params=
comment5.target=void\ shoot()
comment5.text=\r\n\ Shoots\ at\ the\ nearby\ soldiers.\ Does\ not\ work\ every\ time\ it\ is\ called.\r\n\ The\ counter\ variable\ should\ be\ divisible\ by\ 20\ for\ the\ shooting\ to\ take\ place.\r\n
comment6.params=
comment6.target=void\ walk()
comment6.text=\r\n\ Controls\ the\ movement\ of\ the\ elephant\ on\ the\ screen.\r\n
comment7.params=side
comment7.target=boolean\ checkCloseSoldiers(boolean)
comment7.text=\r\n\ Checks\ to\ see\ if\ there\ any\ soldier\ of\ the\ specified\ type\ in\ a\ range\r\n\ of\ 200\ pixels\ around\ the\ horse.\ Defines\ the\ barefoot\ variable\ and\ gives\ it\ \r\n\ the\ value\ of\ the\ closest\ soldier\ to\ be\ later\ used\ in\ the\ shoot\ method.\r\n\ @return\ true\ -\ there\ is\ a\ soldier,\ false\ -\ there\ isn't\ a\ soldier\r\n\ @param\ side-\ the\ side\ of\ the\ soldier\ you\ are\ looking\ for\ true-left\ side,\ false\ -right\ side\r\n
comment8.params=
comment8.target=void\ loseALife()
comment8.text=\r\n\ Loses\ a\ life.\ The\ horse's\ life\ decreases\ by\ one\ every\ time\ it\ is\ called.\r\n\ If\ the\ horse's\ life\ reaches\ 0,\ then\ the\ death\ points\ get\ recorded\ in\ the\ mainbase.\r\n
comment9.params=
comment9.target=void\ revive()
comment9.text=\r\n\ Spawns\ the\ soldier\ who\ was\ riding\ the\ horse\ when\ the\ horse\ dies.\r\n\ Gets\ called\ by\ the\ checkLives\ method.\r\n
numComments=12
