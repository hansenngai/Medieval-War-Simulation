#BlueJ class context
comment0.params=side\ myBase
comment0.target=BareFoot(boolean,\ MainBase)
comment0.text=\r\n\ Constructs\ the\ soldier.\ Defines\ the\ side\ and\ base\ the\ soldier\ comes\ from\ and\ amount\ of\ life\ the\ soldier\ will\ have.\r\n\ Sets\ the\ speed\ of\ the\ soldier\ and\ displays\ its\ health\ icons.\r\n\ @param\ side-\ which\ base\ the\ soldier\ will\ come\ from\ true\ -\ right\ side,\ false-\ left\ side\r\n\ @param\ myBase\ -\ which\ base\ the\ soldier\ comes\ from\r\n
comment1.params=
comment1.target=void\ act()
comment1.text=\r\n\ Act\ -\ do\ whatever\ the\ BareFoot\ wants\ to\ do.\ This\ method\ is\ called\ whenever\r\n\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\r\n\ Controls\ how\ the\ soldier\ will\ react\ in\ different\ situations.\r\n
comment10.params=
comment10.target=void\ walkToOppBase()
comment10.text=\r\n\ Directs\ the\ soldier\ to\ the\ opponent's\ base.\ Once\ the\ soldier\ arrives\ in\ front\ of\ \r\n\ the\ opponent's\ base,\ he\ starts\ shooting.\ If\ there\ is\ already\ a\ soldier\ shooting\r\n\ at\ the\ base,\ this\ soldier\ moves\ below\ him\ and\ once\ the\ first\ soldier\ dies,\ this\r\n\ soldier\ moves\ to\ his\ place\ for\ accurate\ aiming.\r\n\ \r\n
comment11.params=
comment11.target=boolean\ spotTaken()
comment11.text=\r\n\ Checks\ to\ see\ if\ the\ soldier\ is\ shooting\ at\ the\ base\ or\ not.\r\n\ Gets\ called\ by\ the\ elephant\ and\ horse\ classes\ to\ determine\ whether\ the\ \r\n\ soldier\ is\ willing\ to\ go\ and\ ride\ them.\ A\ soldier\ will\ not\ ride\ any\ vehicle\r\n\ if\ he\ is\ already\ shooting\ at\ the\ opponent's\ base.\r\n\ @return\ true\ -soldier\ is\ shooting\ at\ the\ base,\ false-\ soldier\ is\ not\r\n
comment12.params=
comment12.target=boolean\ goToBase()
comment12.text=\r\n\ Checks\ to\ see\ if\ the\ soldier\ should\ make\ his\ way\ to\ the\ opponent's\ base.\r\n\ Only\ two\ people\ are\ allowed\ to\ shoot\ at\ the\ base,\ if\ there\ is\ less\ than\ two\ people\ shooting\r\n\ and\ this\ soldier\ is\ the\ closest\ to\ the\ opponent's\ base\ than\ any\ other\ soldier,\ this\ soldier\ should\ make\ his\ way\r\n\ to\ the\ opponent's\ base.\ Any\ soldier\ who\ is\ already\ seeking\ an\ elephant\ will\ not\ be\ considered\ for\ this\ method.\r\n\ This\ method\ depends\ on\ the\ nearestSoldierToBase\ method\ to\ determine\ which\ soldier\ is\ closer\ to\ the\ base.\r\n\ @return\ true\ -\ should\ walk\ to\ opponent's\ base,\ \ false-\ should\ not\ walk\r\n
comment13.params=
comment13.target=void\ nearestSoldierToBase()
comment13.text=\r\n\ Determines\ which\ soldier\ is\ closer\ to\ the\ opponent's\ base.\ \r\n\ This\ method\ depends\ on\ the\ calculateNearestSoldierToBase\ method\r\n\ to\ calculate\ distances\ between\ soldiers\ and\ the\ opponent's\ base.\r\n\ This\ method\ also\ depends\ on\ the\ goToBase\ method\ to\ access\ different\ lists\ and\ variables.\r\n
comment14.params=actor
comment14.target=double\ calculateNearestSoldierToBase(greenfoot.Actor)
comment14.text=\r\n\ Calculate\ distances\ between\ this\ soldier\ and\ a\ the\ opponent's\ base.\r\n\ Gets\ called\ by\ the\ nearestSoldierToBase\ method.\r\n\ @param\ actor\ -\ the\ soldier\ in\ which\ the\ distance\ between\ it\ and\ base\ will\ be\ measured\r\n
comment15.params=
comment15.target=void\ revive()
comment15.text=\r\n\ Adds\ a\ tomb\ stone\ after\ the\ soldier\ dies.\ This\ must\ be\ the\ soldier's\ first\ death.\ Each\ soldier\ can\ only\ be\ revived\ once.\r\n\ However,\ if\ the\ soldier\ died\ while\ shooting\ at\ the\ base,\ he\ cannot\ be\ revivied.\ \r\n\ This\ method\ gets\ called\ from\ the\ checkLives\ method.\r\n
comment16.params=
comment16.target=void\ revived()
comment16.text=\r\n\ Marks\ that\ this\ solider\ cannot\ be\ revived\ again.\r\n\ Gets\ called\ from\ the\ medics\ class\ after\ the\ medic\ has\ revived\ the\ soldier.\r\n
comment17.params=
comment17.target=void\ loseALife()
comment17.text=\r\n\ Loses\ a\ life.\ The\ soldier's\ life\ decreases\ by\ one.\r\n\ If\ the\ soldier's\ life\ reaches\ 0,\ a\ death\ is\ recorded\ in\ the\ mainbase\ class.\r\n\ This\ method\ gets\ called\ by\ the\ arrow\ class.\r\n
comment18.params=
comment18.target=boolean\ checkSeekingElephant()
comment18.text=\r\n\ Checks\ to\ see\ if\ the\ soldier\ is\ seeking\ a\ nearby\ elephant\ to\ ride\ it.\r\n\ Gets\ called\ by\ BareFoot\ class\ and\ Horse\ class.\r\n\ @return\ true\ -\ soldier\ is\ seeking\ an\ elephant,\ false\ -\ is\ not\ seeking\ an\ elephant\r\n
comment19.params=
comment19.target=boolean\ locateOppVehicle()
comment19.text=\r\n\ Locates\ the\ nearest\ opponent's\ vehicle.\ Method\ will\ be\ used\ in\ the\ act\ method.\r\n\ @return\ true-\ a\ vehicle\ has\ been\ located,\ false\ -\ a\ vehicle\ has\ not\ been\ located\r\n
comment2.params=
comment2.target=void\ movementAroundObstacles()
comment2.text=\r\n\ Moves\ around\ obstacle\ while\ still\ walking\ towards\ the\ desired\ location\r\n\ If\ soldier\ is\ randomly\ walking\ or\ reaches\ the\ edge\ of\ the\ world\ then,\ \r\n\ ranomly\ rotates\ and\ walks\ in\ a\ different\ direction.\ \ \r\n
comment20.params=
comment20.target=void\ spawnMovement()
comment20.text=\r\n\ Contols\ the\ movement\ of\ the\ soldier\ until\ he\ leaves\ his\ base.\r\n\ The\ soldier\ will\ not\ interact\ with\ any\ thing\ until\ this\ method\ is\ successfully\ ahieved.\r\n
comment3.params=
comment3.target=void\ randomWalk()
comment3.text=\r\n\ Makes\ the\ soldier\ randomly\ walk\ around\ the\ battlefield\r\n\ Changes\ direction\ every\ once\ in\ a\ while.\r\n
comment4.params=
comment4.target=boolean\ atWorldEdge()
comment4.text=\r\n\ Checks\ to\ see\ if\ the\ soldier\ is\ at\ the\ edge\ of\ the\ world\r\n\ @return\ true-\ he\ is,\ false-\ he\ is\ not\r\n
comment5.params=
comment5.target=void\ shoot()
comment5.text=\r\n\ Shoots\ an\ arrow\ in\ the\ direction\ he\ is\ currently\ facing.\ \r\n\ Does\ not\ work\ every\ times\ it\ is\ called-\ counter\ variable\ must\ be\r\n\ divisible\ by\ 20\ for\ the\ shooting\ to\ take\ place.\r\n\ \r\n
comment6.params=
comment6.target=boolean\ locateNearestElephant()
comment6.text=\r\n\ Locates\ the\ nearest\ elephant\ to\ this\ soldier.\ Elephant\ must\ be\ from\ the\ same\ side\ as\ the\ soldier.\r\n\ Defines\ the\ elephant\ variable\ to\ be\ used\ in\ the\ walkToNearestElephant\ method\ and\ to\ access\ methods\ from\ the\ elephant\ class.\r\n\ @return\ true\ -\ there\ is\ an\ elephant\ from\ the\ same\ side\ on\ the\ screen,\ \ false\ -\ there\ isn't\ one\r\n
comment7.params=
comment7.target=boolean\ locateNearestHorse()
comment7.text=\r\n\ Locates\ the\ nearest\ horse\ to\ this\ soldier.\ Horse\ must\ be\ from\ the\ same\ side\ as\ the\ soldier.\r\n\ Defines\ the\ horse\ variable\ to\ be\ used\ in\ the\ walkToNearestHorse\ method\ and\ to\ access\ methods\ from\ the\ horse\ class\ .\r\n\ @return\ true\ -\ there\ is\ a\ horse\ from\ the\ same\ side\ on\ the\ screen,\ \ false\ -\ there\ isn't\ one\r\n
comment8.params=
comment8.target=void\ walkToNearestElephant()
comment8.text=\r\n\ Walks\ to\ the\ nearest\ elephant\ defined\ in\ the\ locateNearestElephant\ method.\r\n\ Moves\ with\ the\ current\ speed\ of\ the\ soldier.\r\n
comment9.params=
comment9.target=void\ walkToNearestHorse()
comment9.text=\r\n\ Walks\ to\ the\ nearest\ horse\ defined\ in\ the\ locateNearestHorse\ method.\r\n\ Moves\ with\ the\ current\ speed\ of\ the\ soldier.\r\n
numComments=21
